/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        if(!head or !head->next){
            return true;
        }
       int len = 0;
       ListNode *p = head;
       while(p){
           len++;
           p = p->next;
       }
       p = head;
       for (int i = 0; i< len/2; i++){
           p = p->next;
       }
       if(len%2 == 1){
           p = p->next;
       }
       ListNode *q = reverse(p);
       
       p = head;
       while(q){
           if(p->val == q->val){
               p=p->next;
               q=q->next;
           }
           else{
               return false;
           }
       }
       return true;
    }
    
    ListNode *reverse(ListNode *root){
        if (!root){
            return NULL;
        }
        ListNode *dummy = new ListNode(0);
        ListNode *pre = NULL;
        dummy->next = pre;
        while(root){
            ListNode *tmp = root->next;
            root->next = pre;
            dummy->next = root;
            pre = dummy->next;
            root = tmp;
        }
        return dummy->next;
    }
};
