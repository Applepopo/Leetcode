/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    /**
     * @param headA: the first list
     * @param headB: the second list
     * @return: a ListNode
     */
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        // write your code here
        if (headA == NULL or headB == NULL){
            return NULL;
        }
        ListNode *A = headA;
        ListNode *B = headB;
        bool fa = false;
        bool fb = false;
        while(true){
            if (A == NULL){
                A=headB;
                fa = !fa;
            }
            if (B == NULL){
                B = headA;
                fb = !fb;
            }
            
            if (fa and fb and A != B){
               return NULL;
            }
            
            if (A == B){
                return A;
            }
           
            A = A->next;
            B = B->next;
        }
    }
};
