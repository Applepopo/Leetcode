/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
         if(!head){
             return NULL;
         }
         
         ListNode *fast = head->next;
         ListNode *slow = head;
         while(fast != slow){
             if(!fast or !fast->next){
                 return NULL;
             }
             fast = fast->next->next;
             slow = slow->next;
         }
         
         fast = head;
         while(fast != slow->next){
             fast = fast->next;
             slow = slow->next;
         }
         return fast;
    }
};
