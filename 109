/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedListToBST(ListNode* head) {
        if(!head){
            return NULL;
        }
        int len = 0;
        ListNode *p = head;
        while(p){
            len++;
            p=p->next;
        }
        TreeNode *root = Helper(head, 0, len-1);
        return root;
    }
    
    TreeNode* Helper(ListNode* &head, int start, int end){
        if(start > end){
            return NULL;
        }
        int mid = start + (end - start)/2;
        TreeNode* left = Helper(head, start, mid-1);
        TreeNode* root = new TreeNode(head->val);
        head = head->next;
        TreeNode* right = Helper(head, mid+1, end);
        root->left = left;
        root->right = right;
        return root;
    }
};
